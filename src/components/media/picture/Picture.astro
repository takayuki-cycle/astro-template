---
import { getImage } from 'astro:assets'
import Image from '@/components/media/image/Image.astro'
import type { Props } from '@/components/media/picture/types'
import type {
  GetImageResult,
  UnresolvedImageTransform
} from '@/../node_modules/astro/dist/assets/types'
import { densities, optimizeImage, quality } from '@/components/media/utils'

const { src, width, height, media, alt, isOptimization } = Astro.props

const isPropsValid =
  src.length === width.length && src.length === height.length && src.length === media.length + 1
if (!isPropsValid) {
  throw new Error(
    'Pictureコンポーネントにおける、src, width, heightの要素数は同じにしてください。また、mediaの要素数はsrcの要素数から1つ減らした数にしてください。'
  )
}
const lastSrc = (src.at(-1) ?? '') as ImageMetadata
const lastWidth = width.at(-1) ?? 0
const lastHeight = height.at(-1) ?? 0

const images: GetImageResult[] = []
for (let index = 0; index < src.length - 1; index++) {
  const srcItem = src[index] ?? ''
  const currentWidth = Number(width[index] ?? 0)
  const image = await getImage({
    src: srcItem,
    densities,
    quality
  } as unknown as UnresolvedImageTransform)

  if (isOptimization) {
    optimizeImage(srcItem, currentWidth, false)
  }
  images.push(image)
}
---

<picture>
  {
    media.map((item, index) => (
      <source
        srcset={images[index]?.srcSet.attribute}
        media={`(min-width: ${item})`}
        width={width[index]}
        height={height[index]}
      />
    ))
  }
  <Image
    src={lastSrc}
    alt={alt}
    width={lastWidth}
    height={lastHeight}
    isOptimization={isOptimization}
  />
</picture>
